#!/bin/sh

# = Functions =

CFG_VERBOSE=1

# Purpose: Emergency local rescue shell.
# TODO: Must this be a function?
do_shell() {
   echo "Do your best!"
   /bin/busybox --install -s
   exec /bin/sh
}

do_cleanup() {
   if [ -n "$CFG_NET_IF" ]; then
      killall dropbear
      /sbin/ifconfig $CFG_NET_IF down 2>/dev/null
   fi
   /bin/umount /mnt/boot 2>/dev/null
   /bin/umount /dev/pts
   /bin/umount /dev
   /bin/umount /proc
   /bin/umount /sys
}

# = Main Procedure =

# Get ready to get the system ready.
/bin/mount -t devtmpfs none /dev
/bin/mount -t proc none /proc
/bin/mount -t sysfs none /sys
mkdir /dev/pts
/bin/mount -t devpts -o uid=0,gid=5,mode=620 devpts /dev/pts

# Remember some things...
_CFG_U="`/sbin/cryptscript -u`"

# Try to mount the unencrypted boot for cryptscript.
CFG_U_FOUND=0
for BLK_PROBE_ITER in `ls -1 /dev/sd*`; do
   /bin/mount -o ro "$BLK_PROBE_ITER" /mnt/boot 2>/dev/null
   if [ -f "$_CFG_U" ]; then
      CFG_U_FOUND=1
      if [ 1 = $CFG_VERBOSE ]; then
         echo "Found unencrypted config file."
      fi
      break
   fi
done

if [ -f "$_CFG_U" ] && \
   [ -n "`/bin/grep "^SSH" "${_CFG_U}"`" ] && \
   [ -n "`/bin/grep "^IP4" "${_CFG_U}" | /bin/awk -F'=' '{print $2}'`" ]
   [ -n "`/bin/grep "^IP4" "${_CFG_U}" | /bin/awk -F'=' '{print $3}'`" ]
then
   # Start the remote listener.
   CFG_NET_IF="`/bin/grep "^IP4" "${_CFG_U}" | /bin/awk -F'=' '{print $2}'`"
   CFG_NET_IP4="`/bin/grep "^IP4" "${_CFG_U}" | /bin/awk -F'=' '{print $3}'`"
   /sbin/ifconfig "$CFG_NET_IF" "$CFG_NET_IP4"
   /sbin/ifconfig "$CFG_NET_IF" up
   if [ 0 != $? ] && [ 1 = $CFG_VERBOSE ]; then
      echo "Started network on $CFG_NET_IF with address $CFG_NET_IP4."
   fi
   /sbin/dropbear -s -j -k -p $CFG_NET_IP4:4450 >/dev/null 2>&1
   if [ 0 != $? ] && [ 1 = $CFG_VERBOSE ]; then
      echo "Started remote decryption service."
   fi
fi

# Get the user password.
/sbin/cryptscript

if [ 0 != $? ]; then
   # Failure to mount!
   do_cleanup
   /sbin/reboot -f
   #do_shell
fi

/sbin/splash_util --mode=s -c setmode

# Clean up and prepare for the real thing.
do_cleanup

exec switch_root /mnt/root /sbin/init

