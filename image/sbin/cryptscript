#!/bin/sh

# cryptscript
# Author: Alexander Boulette
# Purpose: Mount encrypted devices.

trap ':' INT
#trap ':' TSTP
trap '/bin/sh' TSTP

if [ -z "$CFG_VERBOSE" ]; then
   CFG_VERBOSE=0
fi

# Use two config files. One on the unencrypted root and one on the encrypted 
# root.
_CFG_E="/mnt/root/.cryscry.cfg"

# Attempt disk decryption.
PP_ATTEMPTS=0
while [ $PP_ATTEMPTS -lt 4 ]; do
   PP_ATTEMPT_GOOD=1

   # Get the disk password from the user.
   echo "Well, here we are."
   read -s P

   # Try to mount the disks given the entered password.
   for BLK_MNT_ITER in `/bin/grep "^M_LK" "/etc/cryscry.cfg"`; do
      DEV_ITER="`echo "$BLK_MNT_ITER" | /bin/awk -F'=' '{print $2}'`"
      MAP_ITER="`echo "$BLK_MNT_ITER" | /bin/awk -F'=' '{print $3}'`"
      echo "$P" | /sbin/cryptsetup luksOpen "$DEV_ITER" "$MAP_ITER"

      #if [ 0 = $? ] && [ 1 = $CFG_VERBOSE ]; then
      #   echo "Success."
      #elif [ 0 = $? ] && [ 1 = $CFG_VERBOSE ]; then
      #   echo "Failure."

      if [ 0 -ne $? ]; then
         # If even one device can't be unlocked then try again.
         PP_ATTEMPTS=$(( $PP_ATTEMPTS+1 ))
         PP_ATTEMPT_GOOD=0
         break
      fi
   done

   if [ 0 = $PP_ATTEMPT_GOOD ]; then
      # The password attempt is no good so try again.
      continue
   fi

   # Try to start the LVM modules inside
   if [ -b "/dev/mapper/crypt-lvm" ]; then
      /sbin/vgscan --mknodes
      /sbin/vgchange -a ay
   fi

   # Try to prepare the root device.
   if [ -b "/dev/mapper/root" ]; then
      /bin/mount -o ro /dev/mapper/root /mnt/root
   elif [ -b "/dev/mapper/crypt-root" ]; then
      /bin/mount -o ro /dev/mapper/crypt-root /mnt/root
   else
      ROOT_TEST=""
      for ROOT_TEST_ITER in `ls /dev/mapper/*-root`; do
         ROOT_TEST="$ROOT_TEST_ITER"
         break
      done
      
      if [ -z "$ROOT_TEST" ]; then
         echo "No potential root device found."
         #read -s X
         exit 1
      else
         /bin/mount -o ro $ROOT_TEST /mnt/root
      fi
   fi

   # Handle encrypted configuration directives if there are any.
   if [ -f "$_CFG_E" ] && [ -n "`/bin/grep "^KEY_TMP_ROOT" "$_CFG_E"`" ]
   then
      if [ 1 = $CFG_VERBOSE ]; then
         echo "Found escry file."
      fi

      # Write the disk password to a temporary memory disk so it can be used
      # later.
      MKEY_DIR="`/bin/grep "^KEY_TMP_ROOT" "$_CFG_E" | \
         /bin/awk -F'=' '{print $2}'`"
      MKEY_TMP="/mnt/root$MKEY_DIR"
      if [ ! -d "$MKEY_TMP" ]; then
         /bin/mkdir -p $MKEY_TMP
      fi
      /bin/mount -t tmpfs -o size=500K none "$MKEY_TMP"
      echo "$P" > "$MKEY_TMP/tkey"
      chmod 0400 "$MKEY_TMP/tkey"
   fi

   # Continue booting.
   exit 0
done

# Unable to complete successfully.
exit 1

